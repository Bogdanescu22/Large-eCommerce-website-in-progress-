{"version":3,"file":"static/js/52.0f027fb3.chunk.js","mappings":"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","sources":["Components/UserComponents/CardCartPage.jsx","Components/UserComponents/UserCartPage.jsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nfunction CardCartPage({ imgURL, title, quantity, price, onStockCheck, user_id, onDelete, updateTotal}) {\r\n  const [stock, setStock] = useState(null);\r\n  const [currentQuantity, setCurrentQuantity] = useState(quantity);\r\n  const [productID, setProductID]=useState(null);\r\n  const [deleteItem, setDeleteItem]=useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.devsite.cfd/products\")\r\n      .then((res) => res.json())\r\n      .then((products) => {\r\n        const foundProduct = products.find((product) => product.image_url === imgURL);\r\n        if (foundProduct) {\r\n          setStock(foundProduct.stock);\r\n          setProductID(foundProduct.id);\r\n          console.log(\"📌 productID setat:\", foundProduct.id); // Debug\r\n        } else {\r\n          setStock(0);\r\n          setProductID(null);\r\n          console.log(\"❌ productID este null!\"); // Debug\r\n        }\r\n      })\r\n      .catch((err) => console.log(\"Eroare la fetch\", err));\r\n}, [imgURL]);\r\n\r\n\r\n  const stockInfo = quantity > stock? \"indisponibil\" : \"disponibil\" ;\r\n\r\n  useEffect(()=>\r\n  {\r\n  onStockCheck(imgURL,stockInfo)\r\n  },[imgURL,stockInfo]);\r\n\r\n\r\n  const updateQuantityInDatabase = (newQuantity) => {\r\n    if (!productID || !user_id) return;\r\n\r\n    fetch(`https://api.devsite.cfd/cart/quantity/update/${productID}/${user_id}`, {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({quantity: newQuantity}), \r\n        credentials: \"include\"\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        updateTotal(price, newQuantity > currentQuantity)\r\n        console.log(\"✅ Răspuns server:\", data);\r\n    })\r\n    .catch((err) => console.log(\"❌ Eroare la actualizarea cantității:\", err));\r\n};\r\n\r\n\r\nconst Increase = () => {\r\n  const newQuantity = currentQuantity + 1;\r\n  setCurrentQuantity(newQuantity); // Setează cantitatea pe frontend\r\n  updateQuantityInDatabase(newQuantity)\r\n};\r\n\r\nconst Decrease = () => {\r\n  if (currentQuantity > 1) {\r\n    const newQuantity = currentQuantity - 1;\r\n    setCurrentQuantity(newQuantity); // Setează cantitatea pe \r\n    updateQuantityInDatabase(newQuantity)\r\n  }\r\n};\r\n\r\nconst deleteCartProduct= () => {\r\n  fetch(`https://api.devsite.cfd/cart/delete/${user_id}/${productID}`,{\r\n  method:\"DELETE\",\r\n  credentials:\"include\"})\r\n  .then((res)=>res.json())\r\n  .then((data) => {\r\n  console.log(\"✅ Răspuns server (Ștergere):\", data)\r\n  onDelete(productID)\r\n  setDeleteItem(true) })\r\n  .catch((err) => console.log(\"Eroare la stergerea produsului:\", err))\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className={`cart-card ${deleteItem? \"active\" : \"\"}`}>\r\n      <div className=\"image-CartCard-div\">\r\n        <img className=\"image-CartCard\" src={imgURL} alt={title} />\r\n      </div>\r\n      <div className=\"title-quantity-CartCard\">\r\n        <h2 className=\"title-CartCard\">{title}</h2>\r\n        <div className=\"quantity-CartCard\">\r\n\r\n           <span className=\"add-quantity\"><button onClick={Increase}><svg width=\"17\" height=\"13\" viewBox=\"0 0 40 40\" xmlns=\"http://www.w3.org/2000/svg\">\r\n               <rect width=\"10\" height=\"40\" x=\"15\" fill=\"#afb1b8\"/>\r\n               <rect width=\"40\" height=\"10\" y=\"15\" fill=\"#afb1b8\"/>\r\n            </svg></button></span>\r\n\r\n          Cantitate: {currentQuantity}\r\n\r\n           <span className=\"minus-quantity\"><button onClick={Decrease}><svg width=\"15\" height=\"10\" viewBox=\"0 0 40 10\" xmlns=\"http://www.w3.org/2000/svg\">\r\n             <rect width=\"40\" height=\"10\" rx=\"2\" fill=\"#afb1b8\"/>\r\n            </svg></button></span>\r\n        </div>\r\n      </div>\r\n      <div className=\"price-disponibility-CartCard\">\r\n        <h2 className=\"price-CartCard\">${price}</h2>\r\n        <p className={stockInfo === \"indisponibil\" ? \"indisponibil\" : \"disponibil\"}>\r\n          {stockInfo === \"indisponibil\"\r\n            ? \"Nu e disponibil în cantitatea selectată\"\r\n            : \"Disponibil în cantitatea selectată\"}\r\n        </p>\r\n      </div>\r\n      <div className=\"cart-delete-button\">\r\n      <button onClick={deleteCartProduct}>X</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardCartPage;","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./Header.jsx\";\r\nimport Footer from \"./Footer.jsx\";\r\nimport CardCartPage from \"./CardCartPage.jsx\";\r\n\r\nfunction UserCartPage() {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [userId, setUserId] = useState(null);\r\n  const [total, setTotal] = useState(null);\r\n  const [stockStatus, setStockStatus] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getUserId = async () => {\r\n      try {\r\n        const response = await fetch(\"https://api.devsite.cfd/auth/user\", {\r\n          credentials: \"include\",\r\n        });\r\n\r\n        if (!response.ok) throw new Error(\"Eroare la obținerea utilizatorului\");\r\n\r\n        const data = await response.json();\r\n        if (data.user) {\r\n          setUserId(data.user.id);\r\n        } else {\r\n          alert(\"Nu ești autentificat\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Eroare:\", error);\r\n      }\r\n    };\r\n\r\n    getUserId();\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    if (!userId) return;\r\n\r\n    const fetchCartItems = async () => {\r\n      try {\r\n        const response = await fetch(`https://api.devsite.cfd/cart/data/${userId}`, {\r\n          credentials: \"include\",\r\n        });\r\n\r\n        if (!response.ok) throw new Error(\"Eroare la obținerea produselor din coș\");\r\n\r\n        const result = await response.json();\r\n        setCartItems(result);\r\n      } catch (err) {\r\n        console.error(\"❌ Eroare la obținerea produselor din coș:\", err);\r\n      }\r\n    };\r\n\r\n    fetchCartItems();\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    if (!userId || cartItems.length === 0) {\r\n      setTotal(0);\r\n      return;\r\n    }\r\n\r\n    fetch(`https://api.devsite.cfd/cart/total/${userId}`, { credentials: \"include\" })\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(\"Eroare la preluarea totalului coșului\");\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setTotal(data.total !== undefined ? data.total : 0);\r\n      })\r\n      .catch((err) => console.error(\"Eroare la fetch:\", err));\r\n  }, [userId, cartItems]);\r\n\r\n  function handleStockCheck(imgURL, stockInfo) {\r\n    setStockStatus((prevValues) => {\r\n      return {\r\n        ...prevValues,\r\n        [imgURL]: stockInfo,\r\n      };\r\n    });\r\n  }\r\n\r\n  const hasUnavailableItems = Object.values(stockStatus).includes(\"indisponibil\");\r\n\r\n  const handleClick = () => {\r\n    if (hasUnavailableItems) {\r\n      alert(\"Produsele nu sunt disponibile în cantitatea aleasă!\");\r\n    } else {\r\n      window.location.href = \"https://www.devsite.cfd/telefoane/checkout\";\r\n    }\r\n  };\r\n\r\n  const handleDeleteItem = (productID) => {\r\n    setCartItems((prevItems) => prevItems.filter((item) => item.product_id !== productID));\r\n  };\r\n\r\n  const updateTotal = (price, isIncrease) => {\r\n    setTotal((prevTotal) => (isIncrease ? parseFloat(prevTotal) + parseFloat(price) : parseFloat(prevTotal) - parseFloat(price)));\r\n  };\r\n\r\n  return (\r\n    <div className=\"cartPage\">\r\n      <Header />\r\n      <main>\r\n        <div className=\"cart-cards-div\">\r\n          {cartItems.length > 0 ? (\r\n            cartItems.map((cart) => (\r\n              <CardCartPage\r\n                key={cart.id}\r\n                user_id={cart.user_id}\r\n                imgURL={cart.img_url}\r\n                title={cart.product_name}\r\n                quantity={cart.quantity}\r\n                price={cart.product_price}\r\n                onStockCheck={handleStockCheck}\r\n                onDelete={handleDeleteItem}\r\n                updateTotal={updateTotal}\r\n              />\r\n            ))\r\n          ) : (\r\n            <p>Coșul tău este gol!</p>\r\n          )}\r\n\r\n          <div className=\"total-CartPage-div\">\r\n            <h2 className=\"total-CartPage\">Total: ${total}</h2>\r\n          </div>\r\n          <button className=\"button-CartPage\" onClick={handleClick}>\r\n            Finalizare Comandă\r\n          </button>\r\n        </div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserCartPage;\r\n"],"names":["_ref","imgURL","title","quantity","price","onStockCheck","user_id","onDelete","updateTotal","stock","setStock","useState","currentQuantity","setCurrentQuantity","productID","setProductID","deleteItem","setDeleteItem","useEffect","fetch","then","res","json","products","foundProduct","find","product","image_url","id","console","log","catch","err","stockInfo","updateQuantityInDatabase","newQuantity","method","headers","body","JSON","stringify","credentials","data","_jsxs","className","children","_jsx","src","alt","onClick","Increase","width","height","viewBox","xmlns","x","fill","y","Decrease","rx","deleteCartProduct","cartItems","setCartItems","userId","setUserId","total","setTotal","stockStatus","setStockStatus","handleStockCheck","prevValues","async","response","ok","Error","user","alert","error","getUserId","result","fetchCartItems","length","undefined","hasUnavailableItems","Object","values","includes","handleDeleteItem","prevItems","filter","item","product_id","isIncrease","prevTotal","parseFloat","Header","map","cart","CardCartPage","img_url","product_name","product_price","handleClick","window","location","href","Footer"],"sourceRoot":""}