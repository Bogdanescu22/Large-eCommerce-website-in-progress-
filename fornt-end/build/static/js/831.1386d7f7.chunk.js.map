{"version":3,"file":"static/js/831.1386d7f7.chunk.js","mappings":"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","sources":["Components/UserComponents/SearchResultPageCard.jsx","Components/UserComponents/SearchResultPage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {useNavigate} from \"react-router-dom\"\r\n\r\n\r\n\r\nconst SearchResultPageCard = ({imgURL, name, price, handleButtonClick}) => {\r\n\r\nconst navigate= useNavigate();\r\n\r\n\r\nreturn(\r\n<div className=\"phone-card-SearchPage\">\r\n      {/* Înlocuim <Link to={...}> cu navigate() */}\r\n      <img\r\n        className=\"phone-card-image-SearchPage\"\r\n        src={imgURL}\r\n        alt={name}\r\n        onClick={() => navigate(`/products/${name}`)} // Navighează fără refresh\r\n        style={{ cursor: \"pointer\" }} // Schimbăm cursorul la hover\r\n      />\r\n      <div className=\"title-search-div\">\r\n      <h2\r\n        className=\"phone-card-title-searchPage\"\r\n        onClick={() => navigate(`/products/${name}`)}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        {name}\r\n      </h2>\r\n      </div>\r\n      <h3 className=\"phone-card-price\">${price}</h3>\r\n      <button className=\"phone-card-button\" onClick={handleButtonClick}>\r\n        Adaugă în coș\r\n      </button>\r\n    </div>)\r\n}\r\nexport default  SearchResultPageCard;","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport SearchResultPageCard from \"./SearchResultPageCard\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst SearchResultPage = () => {\r\n  const [searchedProduct, setSearchedProduct] = useState([]);\r\n  const [userId, setUserId] = useState(null);\r\n  const [cart, setCart] = useState([]);\r\n  const { text } = useParams();\r\n  const [brandOption, setBrandOption] = useState([]);\r\n  const [initialProducts, setInitialProducts] = useState([]);\r\n  const [priceRange, setPriceRange] = useState([]);\r\n  const [brandSearch, setBrandSearch] = useState(\"\");\r\n  const [buttonClick, setButtonClick] = useState(false);\r\n  const [filtersMenuClickPrice, setFiltersMenuClickPrice] = useState(false);\r\n  const [filtersMenuClickBrand, setFiltersMenuClickBrand] = useState(false);\r\n  const [orderByPrice, setOrderByPrice] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getUserId = async () => {\r\n      try {\r\n        const response = await fetch(\"https://api.devsite.cfd/auth/user\", {\r\n          credentials: \"include\",\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error(\"Eroare la obținerea utilizatorului\");\r\n        }\r\n        const data = await response.json();\r\n        setUserId(data.user.id);\r\n      } catch (error) {\r\n        console.error(\"Eroare:\", error);\r\n      }\r\n    };\r\n    getUserId();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!text) {\r\n      console.log(\"SearchText nu exista!\");\r\n      return;\r\n    }\r\n\r\n    fetch(`https://api.devsite.cfd/search-result/${text}`, { credentials: \"include\" })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setSearchedProduct(data);\r\n        setInitialProducts(data);\r\n        console.log(\"Datele primite din fetch-ul pt produse filtrate\", data);\r\n      })\r\n      .catch((err) => console.log(\"Eroare la obtinerea produselor\", err));\r\n  }, [text]);\r\n\r\n  useEffect(() => {\r\n    let filteredProducts = initialProducts;\r\n  \r\n    if (brandOption.length > 0) {\r\n      filteredProducts = filteredProducts.filter((product) =>\r\n        brandOption.includes(product.brand)\r\n      );\r\n    }\r\n  \r\n    if (priceRange.length > 0) {\r\n      const minPrice = Math.min(\r\n        ...priceRange.map((range) => parseInt(range.split(\"-\")[0] || \"0\"))\r\n      );\r\n      const maxPrice = Math.max(\r\n        ...priceRange.map((range) => parseInt(range.split(\"-\")[1] || \"99999\"))\r\n      );\r\n      \r\n      filteredProducts = filteredProducts.filter(\r\n        (product) => product.price >= minPrice && product.price <= maxPrice\r\n      );\r\n    }\r\n\r\n    if (orderByPrice === \"pret_crescator\") {\r\n      filteredProducts = filteredProducts.sort((a, b) => a.price - b.price);\r\n    } else if (orderByPrice === \"pret_descrescator\") {\r\n      filteredProducts = filteredProducts.sort((a, b) => b.price - a.price);\r\n    }\r\n  \r\n    setSearchedProduct(filteredProducts);\r\n  }, [brandOption, priceRange, initialProducts]);\r\n\r\n  useEffect(() => {\r\n   if (orderByPrice === \"pret_crescator\") {\r\n      setSearchedProduct((prevProducts) =>\r\n        [...prevProducts].sort((a, b) => a.price - b.price)\r\n      );\r\n    } else if (orderByPrice === \"pret_descrescator\") {\r\n      setSearchedProduct((prevProducts) =>\r\n        [...prevProducts].sort((a, b) => b.price - a.price)\r\n      );\r\n    }\r\n  }, [orderByPrice] )\r\n\r\n  const handleBrandChange = (event) => {\r\n    const { value, checked } = event.target;\r\n    setBrandOption((prevBrands) => {\r\n      if (checked) {\r\n        return [...prevBrands, value];\r\n      } else {\r\n        return prevBrands.filter((brand) => brand !== value);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleOrderByPrice = (event) => {\r\n    setOrderByPrice(event.target.value);\r\n  };\r\n\r\n  const handleFilterPrice = (eventPrice) => {\r\n    const { value, checked } = eventPrice.target;\r\n    setPriceRange((prevPrice) => {\r\n      if (checked) {\r\n        return [...prevPrice, value];\r\n      } else {\r\n        return prevPrice.filter((price) => price !== value);\r\n      }\r\n    });\r\n  };\r\n\r\n  const BrandDiv = () => {\r\n    const groupedByBrand = initialProducts.reduce((acc, item) => {\r\n      if (!acc[item.brand]) {\r\n        acc[item.brand] = [];\r\n      }\r\n      acc[item.brand].push(item);\r\n      return acc;\r\n    }, {});\r\n\r\n    const filteredBrands = Object.keys(groupedByBrand).filter((brand) =>\r\n      brand.toLowerCase().includes(brandSearch)\r\n    );\r\n\r\n    return filteredBrands.map((brand) => (\r\n      <div key={brand}>\r\n        <input\r\n          type=\"checkbox\"\r\n          id={brand}\r\n          value={brand}\r\n          checked={brandOption.includes(brand)}\r\n          onChange={handleBrandChange}\r\n        />\r\n        <label htmlFor={brand}>{brand}</label>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const handleBrandSearchBar = (event) => {\r\n    setBrandSearch(event.target.value.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-result-page\">\r\n      <Header />\r\n      <main>\r\n        <div className=\"search-result-page-h1-order-by-div\">\r\n          <div className=\"search-result-page-h1\">\r\n            <h1>Rezultate <span>({searchedProduct.length})</span>:</h1>\r\n          </div>\r\n          <div className=\"search-result-page-order-by\">\r\n            <label htmlFor=\"\">Ordonează după:</label>\r\n            <select onChange={handleOrderByPrice} value={orderByPrice} name=\"orderBy\">\r\n              <option value=\"\">Selecteaza</option>\r\n              <option value=\"pret_crescator\">Pret crescator</option>\r\n              <option value=\"pret_descrescator\">Pret descrescator</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"filters-button-div\">\r\n          <button onClick={() => setButtonClick(!buttonClick)} className=\"filters-button\">Filtre</button>\r\n        </div>\r\n        <div className=\"search-result-page-filters-productCards-div\">\r\n          <div className={`search-result-page-filters-div ${buttonClick ? \"active\" : \"\"}`}>\r\n            <div className=\"search-result-page-filters-card\">\r\n              <div className=\"brand-h1-incon-div\">\r\n                <div className=\"brand-h1-div\">\r\n                  <h3 onClick={() => setFiltersMenuClickBrand(!filtersMenuClickBrand)}>{buttonClick ? \"Brand\" : \"Brand:\"}</h3>\r\n                </div>\r\n                <div className=\"brand-icon-div\">\r\n                  {filtersMenuClickBrand ? (\r\n                    <svg width=\"22\" height=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path d=\"M6 9l6 6 6-6\" stroke=\"#afb1b8\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                    </svg>\r\n                  ) : (\r\n                    <svg width=\"22\" height=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path d=\"M6 15l6-6 6 6\" stroke=\"#afb1b8\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                    </svg>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className={`brand-div-options ${filtersMenuClickBrand ? \"active\" : \"\"}`}>\r\n                <input onChange={handleBrandSearchBar} type=\"text\" placeholder=\"Caută...\" />\r\n                <BrandDiv />\r\n              </div>\r\n            </div>\r\n            <div className=\"search-result-page-filters-card\">\r\n              <div className=\"price\">\r\n                <h3 onClick={() => setFiltersMenuClickPrice(!filtersMenuClickPrice)}>Preț:</h3>\r\n                <div className={`price-buttons-div ${filtersMenuClickPrice ? \"active\" : \"\"}`}>\r\n                  <div>\r\n                    <input onChange={(eventPrice) => handleFilterPrice(eventPrice)} value=\"100-500\" type=\"checkbox\" id=\"500-1000\" />\r\n                    <label htmlFor=\"100-500\">100-500</label>\r\n                  </div>\r\n                  <div>\r\n                    <input onChange={(eventPrice) => handleFilterPrice(eventPrice)} value=\"500-1000\" type=\"checkbox\" id=\"500-1000\" />\r\n                    <label htmlFor=\"500-1000\">500-1000</label>\r\n                  </div>\r\n                  <div>\r\n                    <input onChange={(eventPrice) => handleFilterPrice(eventPrice)} value=\"1000-2000\" type=\"checkbox\" id=\"1000-2000\" />\r\n                    <label htmlFor=\"1000-2000\">1000-2000</label>\r\n                  </div>\r\n                  <div>\r\n                    <input onChange={(eventPrice) => handleFilterPrice(eventPrice)} value=\"2000-99999\" type=\"checkbox\" id=\"Peste_2000\" />\r\n                    <label htmlFor=\"Peste_2000\">Peste 2000</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"search-result-page-productCards-div\">\r\n            {searchedProduct.map((produs) => (\r\n              <SearchResultPageCard\r\n                key={produs.id}\r\n                productId={produs.id}\r\n                imgURL={produs.image_url}\r\n                name={produs.name}\r\n                price={produs.price}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResultPage;\r\n"],"names":["_ref","imgURL","name","price","handleButtonClick","navigate","useNavigate","_jsxs","className","children","_jsx","src","alt","onClick","style","cursor","SearchResultPage","searchedProduct","setSearchedProduct","useState","userId","setUserId","cart","setCart","text","useParams","brandOption","setBrandOption","initialProducts","setInitialProducts","priceRange","setPriceRange","brandSearch","setBrandSearch","buttonClick","setButtonClick","filtersMenuClickPrice","setFiltersMenuClickPrice","filtersMenuClickBrand","setFiltersMenuClickBrand","orderByPrice","setOrderByPrice","useEffect","async","response","fetch","credentials","ok","Error","data","json","user","id","error","console","getUserId","then","res","log","catch","err","filteredProducts","length","filter","product","includes","brand","minPrice","Math","min","map","range","parseInt","split","maxPrice","max","sort","a","b","prevProducts","handleBrandChange","event","value","checked","target","prevBrands","handleFilterPrice","eventPrice","prevPrice","BrandDiv","groupedByBrand","reduce","acc","item","push","Object","keys","toLowerCase","type","onChange","htmlFor","Header","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","placeholder","produs","SearchResultPageCard","productId","image_url","Footer"],"sourceRoot":""}