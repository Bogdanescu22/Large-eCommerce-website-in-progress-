"use strict";(self.webpackChunkfornt_end=self.webpackChunkfornt_end||[]).push([[230],{230:(e,a,t)=>{t.r(a),t.d(a,{default:()=>u});var r=t(43),n=t(276),o=t(334),i=t(393),l=t(799),s=t(579);const c=e=>{let{paymentMethod:a,setPaymentMethod:t,amount:n,handleBillingInfoSubmit:o,handleOrderProcess:c}=e;const d=(0,i.useStripe)(),u=(0,i.useElements)(),[h,m]=(0,r.useState)(),p=(0,l.Zp)();(0,r.useEffect)((()=>{n<=0?console.log("Campurile amount si currency sunt obligatorii"):fetch("https://api.devsite.cfd/create-payment-intent",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({amount:n,currency:"usd"})}).then((e=>e.json())).then((e=>m(e.clientSecret)))}),[n]);const g=()=>"card"===a?(0,s.jsxs)("div",{className:"cardForm-div",children:[(0,s.jsx)(i.CardElement,{}),(0,s.jsx)("button",{onClick:()=>{(async()=>{if(!u||!d)return void console.log("Elements sau stripe lipsesc in createPayment");const{error:e,paymentIntent:a}=await d.confirmCardPayment(h,{payment_method:{card:u.getElement(i.CardElement)}});e?(console.error("Plata a e\u0219uat:",e.message),alert("Eroare la plata cu cardul!")):"succeeded"===a.status&&(console.log("Plata reusita!"),alert("Plata finalizata cu succes!"),p("/succes_payment"))})(),o(),c()},children:"Plateste"})]}):"courier"===a?(0,s.jsx)("button",{onClick:e=>{o(e),c(e)},children:"Plaseaza comanda"}):void 0;return(0,s.jsxs)("div",{className:"checkoutForm",children:[(0,s.jsx)("h2",{children:"Metode de plata"}),(0,s.jsxs)("div",{children:[(0,s.jsx)("input",{type:"checkbox",id:"courier",name:"courier",value:"courier",onChange:()=>{t("courier")},checked:"courier"===a,className:"custom-checkbox"}),(0,s.jsx)("label",{htmlFor:"courier",className:"checkbox-label",children:" Plata la livrare"})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("input",{type:"checkbox",id:"card",name:"card",value:"card",onChange:()=>{t("card")},checked:"card"===a,className:"custom-checkbox"}),(0,s.jsx)("label",{htmlFor:"card",className:"checkbox-label",children:"Card de debit sau de credit"})]}),(0,s.jsx)("div",{className:"card-payment",children:(0,s.jsx)(g,{})})]})};var d=t(677);const u=()=>{const[e,a]=(0,r.useState)({full_name:"",email:"",phone:"",country:"",address:"",city:"",county:"",postal_code:""}),[t,l]=(0,r.useState)([]),[u,h]=(0,r.useState)(null),[m,p]=(0,r.useState)(null),[g,j]=(0,r.useState)(),y=(0,d.c)({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}.STRIPE_PUBLIC_KEY);(0,r.useEffect)((()=>{fetch("https://api.devsite.cfd/auth/user",{credentials:"include"}).then((e=>e.json())).then((e=>{h(e.user.id),console.log("Utilizatorul este:",e.user.id)})).catch((e=>console.error("Eroare la obtinerea utilizatorului",e)))}),[]),(0,r.useEffect)((()=>{u&&fetch(`https://api.devsite.cfd/cart/data/${u}`,{credentials:"include"}).then((e=>(console.log("R\u0103spuns server:",e),e.json()))).then((e=>{console.log("Datele din co\u0219:",e),l(e)})).catch((e=>console.error("Eroare la obtinerea produselor din cos",e)))}),[u]),(0,r.useEffect)((()=>{u&&fetch(`https://api.devsite.cfd/cart/total/${u}`,{credentials:"include"}).then((e=>e.json())).then((e=>{p(e.total),console.log("Totalul este:",e.total)})).catch((e=>console.error("Eroare la obtinerea totalului",e)))}),[u]);const b=t=>{const{name:r,value:n}=t.target;a("country"===r?{...e,country:n,city:""}:{...e,[r]:n})},v=t=>{console.log("Aste e raspunsul e din handleSubmit",t),t.preventDefault();const{full_name:r,email:n,phone:o,country:i,address:l,city:s,county:c,postal_code:d}=e;r&&n&&o&&i&&l&&s&&c&&d?(console.log("Datele de facturare:",e),fetch(`https://api.devsite.cfd/billing_info/${u}`,{credentials:"include",method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then((e=>e.json())).then((e=>{console.log("Datele primite in billing_info(front-end):",e),a(e)})).catch((e=>console.error("Eroare la trimiterea datelor de facturare",e)))):alert("Toate c\xe2mpurile sunt obligatorii!")},x={Romania:["Bucure\u0219ti","Cluj-Napoca","Timi\u0219oara","Ia\u0219i","Constan\u021ba","Bra\u0219ov","Craiova","Gala\u021bi","Ploie\u0219ti","Oradea","Bac\u0103u","Arad","Sibiu","Bistri\u021ba","Br\u0103ila","Baia Mare","R\xe2mnicu V\xe2lcea","Suceava","T\xe2rgu Mure\u0219","Foc\u0219ani"],Franta:["Paris","Marseille","Lyon","Toulouse","Nice","Nantes","Strasbourg","Montpellier","Bordeaux","Lille","Rennes","Reims","Le Havre","Saint-\xc9tienne","Toulon","Le Mans","Aix-en-Provence","Clermont-Ferrand","Brest","Limoges"],Belgia:["Bruxelles","Antwerpen","Ghent","Charleroi","Li\xe8ge","Brugge","Namur","Leuven","Mons","La Louvi\xe8re","Kortrijk","Hasselt","Mechelen","Sint-Niklaas","Oostende","Aalst","Seraing","Tournai","Genk","Beringen"],Suedia:["Stockholm","Gothenburg","Malm\xf6","Uppsala","V\xe4ster\xe5s","\xd6rebro","Link\xf6ping","Helsingborg","J\xf6nk\xf6ping","Norrk\xf6ping","Lund","Ume\xe5","Bor\xe5s","Sundsvall","Karlstad","Trollh\xe4ttan","Eskilstuna","G\xe4vle","V\xe4xj\xf6","Kalmar"],Polonia:["Warszawa","Krak\xf3w","\u0141\xf3d\u017a","Wroc\u0142aw","Pozna\u0144","Gda\u0144sk","Szczecin","Bydgoszcz","Lublin","Bia\u0142ystok","Katowice","Gdynia","Cz\u0119stochowa","Radom","Sosnowiec","Toru\u0144","Kielce","Rzesz\xf3w","Gliwice","Zabrze"]};return(0,s.jsxs)("div",{className:"CheckOutPage-div",children:[(0,s.jsx)(n.A,{}),(0,s.jsxs)("main",{children:[(0,s.jsx)("div",{className:"billingData-form-div",children:(0,s.jsxs)("form",{onSubmit:v,children:[(0,s.jsx)("input",{type:"text",id:"full_name",name:"full_name",placeholder:"Nume complet",onChange:b}),(0,s.jsx)("br",{}),(0,s.jsx)("input",{type:"email",id:"email",name:"email",placeholder:"Email",onChange:b}),(0,s.jsx)("br",{}),(0,s.jsx)("input",{type:"tel",id:"phone",name:"phone",placeholder:"Telefon",onChange:b}),(0,s.jsx)("br",{}),(0,s.jsxs)("select",{id:"country",value:e.country,name:"country",onChange:b,children:[(0,s.jsx)("option",{value:"",children:"Selecteaza \u021bara"}),Object.keys(x).map((e=>(0,s.jsx)("option",{value:e,children:e},e)))]}),(0,s.jsx)("br",{}),(0,s.jsx)("input",{type:"text",id:"address",name:"address",placeholder:"Adresa",onChange:b}),(0,s.jsx)("br",{}),(0,s.jsxs)("select",{id:"city",value:e.city,name:"city",onChange:b,children:[(0,s.jsx)("option",{value:"",children:"Selecteaza orasul/localitatea"}),e.country&&x[e.country].map((e=>(0,s.jsx)("option",{value:e,children:e},e)))]}),(0,s.jsx)("br",{}),(0,s.jsxs)("select",{id:"county",value:e.county,name:"county",onChange:b,children:[(0,s.jsx)("option",{value:"",children:"Selecteaza judetul"}),e.country&&{Romania:["Alba","Arad","Arge\u0219","Bac\u0103u","Bihor","Bistri\u021ba-N\u0103s\u0103ud","Boto\u0219ani","Br\u0103ila","Bra\u0219ov","Bucure\u0219ti","Buz\u0103u","C\u0103l\u0103ra\u0219i","Cara\u0219-Severin","Cluj","Constan\u021ba","Covasna","D\xe2mbovi\u021ba","Dolj","Gala\u021bi","Giurgiu","Gorj","Harghita","Hunedoara","Ialomi\u021ba","Ia\u0219i","Ilfov","Maramure\u0219","Mehedin\u021bi","Mure\u0219","Neam\u021b","Olt","Prahova","Satu Mare","S\u0103laj","Sibiu","Suceava","Teleorman","Timi\u0219","Tulcea","Vaslui","V\xe2lcea","Vrancea"],Franta:["Ain","Aisne","Allier","Alpes-de-Haute-Provence","Hautes-Alpes","Alpes-Maritimes","Ard\xe8che","Ardennes","Ari\xe8ge","Aube","Aude","Aveyron","Bouches-du-Rh\xf4ne","Calvados","Cantal","Charente","Charente-Maritime","Cher","Corr\xe8ze","C\xf4te-d'Or","C\xf4tes-d'Armor","Creuse","Dordogne","Doubs","Dr\xf4me","Eure","Eure-et-Loir","Finist\xe8re","Gard","Haute-Garonne","Gers","Gironde","H\xe9rault","Ille-et-Vilaine"],Belgia:["Bruxelles-Capital\u0103","Antwerpen","Flandra de Est","Hainaut","Li\xe8ge","Flandra de Vest","Namur","Flandra de Brabant","Hainaut","Flandra de Vest","Limburg"],Suedia:["Stockholm","V\xe4stra G\xf6taland","Sk\xe5ne","Uppsala","V\xe4stmanland","\xd6rebro","\xd6sterg\xf6tland","Helsingborg","J\xf6nk\xf6ping","Norrk\xf6ping","Lund","V\xe4sterbotten","Kronoberg","Kalmar"],Polonia:["Dolno\u015bl\u0105skie","Kujawsko-pomorskie","Lubelskie","Lubuskie","\u0141\xf3dzkie","Ma\u0142opolskie","Mazowieckie","Opolskie","Podkarpackie","Podlaskie","Pomorskie","\u015al\u0105skie","\u015awi\u0119tokrzyskie","Warmi\u0144sko-mazurskie","Wielkopolskie","Zachodniopomorskie"]}[e.country].map((e=>(0,s.jsx)("option",{value:e,children:e},e)))]}),(0,s.jsx)("br",{}),(0,s.jsx)("input",{type:"text",id:"postal_code",name:"postal_code",placeholder:"Cod po\u0219tal",onChange:b}),(0,s.jsx)("br",{})]})}),(0,s.jsx)("div",{className:"checkOutForm-div",children:(0,s.jsx)(i.Elements,{stripe:y,children:(0,s.jsx)(c,{paymentMethod:g,setPaymentMethod:j,amount:m,handleBillingInfoSubmit:v,handleOrderProcess:a=>{console.log("Asta e raspunsul din handleOrderProcess",a),a.preventDefault(),fetch(`https://api.devsite.cfd/orders/${u}`,{credentials:"include",method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({total_price:m,payment_method:g,billing_id:e.id})}).then((e=>e.json())).then((e=>(console.log("Datele primite:",e),e&&0!==e.length?(console.log("order_id:",e[0].id),e[0].id):(console.error("\u26a0\ufe0f Eroare: r\u0103spunsul API nu con\u021bine date!"),null)))).catch((e=>(console.error("Eroare la trimiterea comenzii",e),null))).then((e=>{e?(console.log("order_id primit:",e),(e=>{t.forEach((a=>{console.log("Produs trimis:",a),fetch("https://api.devsite.cfd/order_items",{credentials:"include",method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({product_id:a.product_id,quantity:a.quantity,price:a.product_price,order_id:e})}).then((e=>e.json())).then((e=>{console.log("\u2705 Produs ad\u0103ugat \xeen order_items:",e)})).catch((e=>console.error("\u274c Eroare la trimiterea produsului:",e)))}))})(e)):console.error("Eroare: newOrderId nu a fost primit!")}))}})})})]}),(0,s.jsx)(o.A,{})]})}}}]);
//# sourceMappingURL=230.d37b8727.chunk.js.map