{"version":3,"file":"static/js/346.8977029f.chunk.js","mappings":"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","sources":["Components/AdminComponents/AdminLogInPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst LoginFormDiv = ({ setEmail, setPassword, Login, setForgotForm }) => {\r\n  return (\r\n    <div className=\"admin-login-page-form\">\r\n      <div><h1>DevSite Admin</h1></div>\r\n      <hr />\r\n      <div>\r\n        <input \r\n          type=\"text\" \r\n          name=\"email\" \r\n          placeholder=\"Email\" \r\n          onChange={(e) => setEmail(e.target.value)} \r\n        />\r\n      </div>\r\n      <div>\r\n        <input \r\n          type=\"password\"\r\n          name=\"password\" \r\n          placeholder=\"Password\" \r\n          onChange={(e) => setPassword(e.target.value)} \r\n        />\r\n      </div>\r\n      <div>\r\n        <button onClick={Login}>Log in</button>\r\n      </div>\r\n      <div>\r\n        <p onClick={() => setForgotForm(true)}>Ai uitat parola?</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WaitingTimeDiv = ({ ForgotPassword }) => {\r\n  const [timeLeft, setTimeLeft] = useState(15);  \r\n  const [message, setMessage] = useState(\"\");\r\n  const [timerActive, setTimerActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!timerActive) return;\r\n\r\n    if (timeLeft > 0) {\r\n      const timer = setInterval(() => {\r\n        setTimeLeft(prevTime => prevTime - 1);\r\n      }, 1000);\r\n      return () => clearInterval(timer);\r\n    } else {\r\n      setMessage(\"Nu ai primit nimic? Retrimite!\");\r\n      setTimerActive(false);\r\n    }\r\n  }, [timeLeft, timerActive]);\r\n\r\n  return (\r\n    <div className=\"waiting-time-reset-password\">\r\n      {timerActive ? (\r\n        <p>AÈ™teaptÄƒ {timeLeft} secunde</p>\r\n      ) : (\r\n        <p>{message}</p>\r\n      )}\r\n      {!timerActive && (\r\n        <button onClick={() => {\r\n          setTimeLeft(15);  \r\n          setTimerActive(true);  \r\n          setMessage(\"\");\r\n          ForgotPassword();\r\n        }}>Trimite/Retrimite</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ForgotPasswordForm = ({ setEmail2, ForgotPassword, setForgotForm }) => {\r\n  return (\r\n    <div className=\"admin-forgot-password-form\">\r\n      <div><h1>DevSite Admin</h1></div>\r\n      <hr />\r\n      <p onClick={() => setForgotForm(false)}>Inapoi la LogIn</p>\r\n      <div className=\"admin-forgot-password-form-input\">\r\n        <input \r\n          onChange={(e) => setEmail2(e.target.value)} \r\n          type=\"email\" \r\n          placeholder=\"Introdu adresa de email\" \r\n        />\r\n      </div>\r\n      <WaitingTimeDiv ForgotPassword={ForgotPassword} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AdminLoginPage = () => {\r\n  const [password, setPassword] = useState(\"\"); \r\n  const [email, setEmail] = useState(\"\"); \r\n  const [email2, setEmail2] = useState(\"\"); \r\n  const [forgotForm, setForgotForm] = useState(false); \r\n\r\n  const ForgotPassword = () => { \r\n    if (!email2) return;\r\n\r\n    fetch(\"https://api.devsite.cfd/admin/reset-password\", { \r\n      method: \"POST\", \r\n      credentials: \"include\", \r\n      headers: { \"Content-Type\": \"application/json\" }, \r\n      body: JSON.stringify({ email2 }) \r\n    })\r\n      .then((res) => res.json()) \r\n      .then((data) => console.log(\"Email trimis:\", data)) \r\n      .catch((error) => console.error(\"Eroare la resetare parolÄƒ:\", error)); \r\n  };\r\n\r\n  const Login = (e) => { \r\n    e.preventDefault(); \r\n    fetch(\"https://api.devsite.cfd/admin/login\", {  \r\n      method: \"POST\", \r\n      credentials: \"include\", // ðŸ”¥ AdÄƒugat pentru cookie\r\n      headers: { \"Content-Type\": \"application/json\" }, \r\n      body: JSON.stringify({ email, password }) \r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(\"Eroare la fetch pt login\");\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"Login cu succes:\", data);\r\n        // ðŸ”„ Redirect frontend\r\n        window.location.href = \"/admin-panel\";\r\n      })\r\n      .catch((error) => console.error(\"Eroare la login\", error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-login-page\">\r\n      <main className=\"admin-login-page-main\">\r\n        {!forgotForm ? (\r\n          <LoginFormDiv \r\n            setEmail={setEmail}\r\n            setPassword={setPassword}\r\n            Login={Login}\r\n            setForgotForm={setForgotForm}\r\n          />\r\n        ) : (\r\n          <ForgotPasswordForm \r\n            setEmail2={setEmail2}\r\n            ForgotPassword={ForgotPassword}\r\n            setForgotForm={setForgotForm}\r\n          />\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLoginPage;"],"names":["LoginFormDiv","_ref","setEmail","setPassword","Login","setForgotForm","_jsxs","className","children","_jsx","type","name","placeholder","onChange","e","target","value","onClick","WaitingTimeDiv","_ref2","ForgotPassword","timeLeft","setTimeLeft","useState","message","setMessage","timerActive","setTimerActive","useEffect","timer","setInterval","prevTime","clearInterval","ForgotPasswordForm","_ref3","setEmail2","AdminLoginPage","password","email","email2","forgotForm","fetch","method","credentials","headers","body","JSON","stringify","then","res","json","data","console","log","catch","error","preventDefault","ok","Error","window","location","href"],"sourceRoot":""}