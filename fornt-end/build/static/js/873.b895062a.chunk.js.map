{"version":3,"file":"static/js/873.b895062a.chunk.js","mappings":"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","sources":["Components/UserComponents/DynamicCategoryPage.jsx","Components/UserComponents/CardTelefoanePage.jsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport CardTelefoanePage from \"./CardTelefoanePage\";\r\n\r\nconst DynamicCategoryPage = () => {\r\n\r\nconst {category} = useParams();\r\n\r\nconst [categories, setCategories] = useState([])\r\nconst [product, setProduct] = useState([])\r\n\r\n\r\n  useEffect(()=>{\r\n  fetch(\"https://api.devsite.cfd/category_pages\")\r\n  .then((res)=>res.json())\r\n  .then((data) => {\r\n    const filtered = data.filter((cat) => cat.category_name === decodeURIComponent(category));\r\n    console.log(\"Filtered\",filtered)\r\n    setCategories(filtered);\r\n  })\r\n  .catch((err)=>console.log(\"Eroare la fetch\", err))\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    fetch(`https://api.devsite.cfd/search_product/${decodeURIComponent(category)}`)\r\n    .then((res)=>res.json())\r\n    .then((data)=>{setProduct(data) ;console.log(\"Asta e data:\",data); console.log(category)})\r\n    .catch((err)=>console.log(\"Eroare la fetch\", err))\r\n    },[])\r\n  \r\n    console.log(\"URL-ul imaginii:\", `https://www.devsite.cfd${categories[0]?.image.replace(/ /g, \"%20\")}`)\r\n\r\nreturn(\r\n\r\n<div className=\"telefoane-container\">\r\n<Header />\r\n<main>\r\n{categories.length > 0 ? (\r\n  <div\r\n    className=\"hero-div-telefoanePage\"\r\n    style={{\r\n      backgroundImage: `url(\"https://www.devsite.cfd${categories[0]?.image.replace(/ /g, \"%20\")}\")`,\r\n    }}\r\n  >\r\n    <div className=\"hero-text-Telefoane\">\r\n      <h1 className=\"hero-title-Telefoane\">{categories[0]?.page_title}</h1>\r\n    </div>\r\n  </div>\r\n) : (\r\n  <div className=\"hero-div-telefoanePage\">Se încarcă...</div>\r\n)}\r\n\r\n<div className=\"product-cards-div\">\r\n      {product.length>0 ? (product.map((produs) => (\r\n        <CardTelefoanePage\r\n          key={produs.id}\r\n          productId={produs.id}\r\n          imgURL={produs.image_url}\r\n          name={produs.name}\r\n          price={produs.price}\r\n          category={produs.category}\r\n        />\r\n      ))) : (\r\n      \"Se incarca cards\"\r\n      )}\r\n    </div>\r\n</main>\r\n<Footer />\r\n</div>\r\n);\r\n\r\n}\r\n\r\nexport default DynamicCategoryPage","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // Importăm useNavigate\r\n\r\nfunction CardTelefoanePage({ productId, imgURL, name, price, category }) {\r\n  const [userId, setUserId] = useState(null); // Stocăm userId\r\n  const [cart, setCart] = useState([]); // Stocăm produsele adăugate în coș\r\n  const navigate = useNavigate(); // Inițializăm navigate\r\n\r\n\r\n  // Obținem userId la montarea componentei\r\n  useEffect(() => {\r\n    const getUserId = async () => {\r\n      try {\r\n        const response = await fetch(\"https://api.devsite.cfd/auth/user\", {\r\n          credentials: \"include\",\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Eroare la obținerea utilizatorului\");\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.user) {\r\n          setUserId(data.user.id);\r\n        } else {\r\n          alert(\"Nu ești autentificat\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Eroare:\", error);\r\n      }\r\n    };\r\n\r\n    getUserId();\r\n  }, []);\r\n\r\n  // Funcția de adăugare în coș\r\n  const handleButtonClick = async () => {\r\n    if (!userId) {\r\n      alert(\"Trebuie să fii autentificat pentru a adăuga produse în coș.\");\r\n      return;\r\n    }\r\n\r\n    const newProduct = {\r\n      product_name: name,\r\n      product_price: price,\r\n      product_id: productId,\r\n      product_img: imgURL,\r\n      quantity: 1,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"https://api.devsite.cfd/cart\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user_id: userId,\r\n          product_id: newProduct.product_id,\r\n          product_name: newProduct.product_name,\r\n          product_price: newProduct.product_price,\r\n          product_img: newProduct.product_img,\r\n          quantity: newProduct.quantity,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Eroare la adăugarea produsului în coș\");\r\n      }\r\n\r\n      const result = await response.json();\r\n      setCart((prevCart) => [...prevCart, result.product]); // Actualizăm coșul\r\n      alert(\"Produsul a fost adăugat în coș!\");\r\n    } catch (error) {\r\n      console.error(\"Eroare la adăugarea produsului:\", error);\r\n      alert(\"Eroare la adăugarea produsului în coș\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"phone-card\">\r\n      {/* Înlocuim <Link to={...}> cu navigate() */}\r\n      <img\r\n        className=\"phone-card-image\"\r\n        src={imgURL}\r\n        alt={name}\r\n        onClick={() => navigate(`/products/${name}`)} // Navighează fără refresh\r\n        style={{ cursor: \"pointer\" }} // Schimbăm cursorul la hover\r\n      />\r\n      <h2\r\n        className=\"phone-card-title\"\r\n        onClick={() => navigate(`/${category}/${name}`)}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        {name}\r\n      </h2>\r\n      <h3 className=\"phone-card-price\">${price}</h3>\r\n      <button className=\"phone-card-button\" onClick={handleButtonClick}>\r\n        Adaugă în coș\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardTelefoanePage;\r\n"],"names":["DynamicCategoryPage","_categories$","_categories$2","_categories$3","category","useParams","categories","setCategories","useState","product","setProduct","useEffect","fetch","then","res","json","data","filtered","filter","cat","category_name","decodeURIComponent","console","log","catch","err","image","replace","_jsxs","className","children","_jsx","Header","length","style","backgroundImage","page_title","map","produs","CardTelefoanePage","productId","id","imgURL","image_url","name","price","Footer","_ref","userId","setUserId","cart","setCart","navigate","useNavigate","async","response","credentials","ok","Error","user","alert","error","getUserId","src","alt","onClick","cursor","newProduct","product_name","product_price","product_id","product_img","quantity","method","headers","body","JSON","stringify","user_id","result","prevCart"],"sourceRoot":""}